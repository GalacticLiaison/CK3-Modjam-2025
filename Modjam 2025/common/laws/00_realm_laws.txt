@pirate_authority_cooldown_years = 5

pirate_authority = {
	default = pirate_authority_1
	cumulative = yes
	flag = realm_law
	
	pirate_authority_1 = {
		pass_phrase = pirate_authority_1_pass_phrase
		confirmation_title = pirate_authority_1_pass_phrase
		confirmation_button_text = pirate_authority_confirmation_button_text

		modifier = {
			belligerent_opinion = -25
			glory_hound_opinion = -20
			domain_limit_min = 1
			domain_limit_max = 2
			vassal_limit_min = 1
			vassal_limit_max = 1
		}
		flag = title_revocation_allowed
		flag = uses_pirate_authority
		flag = imprisonment_toggle_enable
		
		can_pass = {
			has_realm_law = pirate_authority_2
		}

		on_pass = {
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}
	}
	
	pirate_authority_2 = {
		pass_phrase = pirate_authority_2_pass_phrase
		confirmation_title = pirate_authority_2_pass_phrase
		confirmation_button_text = pirate_authority_confirmation_button_text

		modifier = {
			belligerent_opinion = 10
			glory_hound_opinion = 10
			max_migration_distance_mult = 0.25
			domain_limit_min = 1
			domain_limit_max = 1
			vassal_limit_min = 1
			vassal_limit_max = 2 # 3
		}
		flag = can_change_succession_laws
		flag = imprisonment_toggle_on
		flag = title_revocation_allowed

		can_pass = {
			custom_tooltip = {
				text = "pirate_authority_2_level_requirement"
				OR = {
					has_realm_law = pirate_authority_1
					has_realm_law = pirate_authority_3
				}
			}
			custom_description = {
				subject = root
				text = "has_pirate_authority_cooldown"
				NAND = {
					has_variable = pirate_authority_cooldown
					NOT = {
						culture = { has_innovation = innovation_all_things }
					}
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = pirate_authority_2
							has_realm_law = pirate_authority_3
						}
					}
					add = increase_pirate_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = pirate_authority_cooldown
				years = @pirate_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = pirate_authority_1 }
				value = 1
			}
		}
	}
	
	pirate_authority_3 = {
		pass_phrase = pirate_authority_3_pass_phrase
		confirmation_title = pirate_authority_3_pass_phrase
		confirmation_button_text = pirate_authority_confirmation_button_text

		modifier = {
			belligerent_opinion = 10
			glory_hound_opinion = 10
			max_migration_distance_mult = 0.5
			domain_limit_min = 2
			domain_limit_max = 3
			vassal_limit_min = 8
			vassal_limit_max = 12 # 15
		}
		flag = vassal_retraction_allowed

		can_pass = {
			custom_tooltip = {
				text = "pirate_authority_3_level_requirement"
				OR = {
					has_realm_law = pirate_authority_2
					has_realm_law = pirate_authority_4
				}
			}
			custom_description = {
				subject = root
				text = "has_pirate_authority_cooldown"
				NAND = {
					has_variable = pirate_authority_cooldown
					NOT = {
						culture = { has_innovation = innovation_all_things }
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = pirate_authority_3
							has_realm_law = pirate_authority_4
						}
					}
					add = increase_pirate_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = pirate_authority_cooldown
				years = @pirate_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = pirate_authority_2 }
				value = 1
			}
		}
	}
	
	pirate_authority_4 = {
		pass_phrase = pirate_authority_4_pass_phrase
		confirmation_title = pirate_authority_4_pass_phrase
		confirmation_button_text = pirate_authority_confirmation_button_text

		modifier = {
			belligerent_opinion = 20
			glory_hound_opinion = 10
			max_migration_distance_mult = 1
			domain_limit_min = 2
			vassal_limit_min = 5
			vassal_limit_max = 15
		}

		can_pass = {
			custom_tooltip = {
				text = "pirate_authority_4_level_requirement"
				OR = {
					has_realm_law = pirate_authority_3
					has_realm_law = pirate_authority_5
				}
			}
			custom_description = {
				subject = root
				text = "has_pirate_authority_cooldown"
				NAND = {
					has_variable = pirate_authority_cooldown
					NOT = {
						culture = { has_innovation = innovation_all_things }
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = pirate_authority_4
							has_realm_law = pirate_authority_5
						}
					}
					add = increase_pirate_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = pirate_authority_cooldown
				years = @pirate_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = pirate_authority_3 }
				value = 1
			}
		}
		
	}
	
	pirate_authority_5 = {
		pass_phrase = pirate_authority_5_pass_phrase
		confirmation_title = pirate_authority_5_pass_phrase
		confirmation_button_text = pirate_authority_confirmation_button_text

		modifier = {
			belligerent_opinion = 25
			glory_hound_opinion = 15
			max_migration_distance_mult = 10
			max_migration_distance_mult = 2
			vassal_limit_min = 985
			vassal_limit_max = 970
		}
		flag = max_authority_level

		can_pass = {
			has_realm_law = pirate_authority_4
			custom_description = { 
				subject = root
				text = "has_pirate_authority_cooldown"
				NAND = {
					has_variable = pirate_authority_cooldown
					NOT = {
						culture = { has_innovation = innovation_all_things }
					}
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = {
							has_realm_law = pirate_authority_5
						}
					}
					add = increase_pirate_authority_prestige_cost
					multiply = 2
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = pirate_authority_cooldown
				years = @pirate_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
			play_sound_effect = "event:/DLC/CE2/UI/Notifications/ce2_ui_notifications_nomadicAuthority_wolf"
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = pirate_authority_4 }
				value = 1
			}
		}
	}
}
